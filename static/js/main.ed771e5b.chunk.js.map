{"version":3,"sources":["Champion/Champion.tsx","Link/Link.tsx","ChampionForm/ChampionForm.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Champion","img","name","rol","dificulty","description","onDelete","onEdit","id","className","alt","src","onClick","Link","props","actives","href","url","text","ChampionForm","editId","type","onCreate","React","useState","formSubmitted","setFormSubmitted","setName","setImg","setRol","setDificulty","setDescription","iscaractValid","length","isImgValid","onSubmit","event","preventDefault","console","log","onChange","target","value","App","formType","setFormType","setEditId","championElems","setChampionElems","handleBeginEdit","handleDelete","deleteId","championElemsCopy","filter","elem","newChampion","newArray","Math","random","editChampionElem","slice","editIndex","findIndex","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAmBaA,EAAqC,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,IAAIC,EAAsD,EAAtDA,KAAKC,EAAiD,EAAjDA,IAAIC,EAA6C,EAA7CA,UAAUC,EAAmC,EAAnCA,YAAYC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,OAAOC,EAAO,EAAPA,GAOnG,OAAO,sBAAKC,UAAW,WAAhB,UACR,qBAAKA,UAAW,gBAAgBC,IAAI,QAAQC,IAAMV,IAE7C,sBAAKQ,UAAW,sBAAhB,UACI,wBAAQG,QAVkD,WACtEN,EAASE,IASG,oBACA,wBAAQI,QAR4C,WAC5DL,EAAOC,IAOC,kBAGA,qBAAIC,UAAY,eAAhB,uBAA0CL,KAC1C,qBAAIK,UAAY,eAAhB,gBAAmCN,KACnC,oBAAIM,UAAW,eAAf,SAA+BP,IAC/B,oBAAIO,UAAW,eAAf,uBACA,mBAAGA,UAAY,cAAf,SAA8BJ,WC3B7BQ,G,MAA6B,SAACC,GACxC,IAAIL,EAAY,OAMf,OALIK,EAAMC,UACNN,GAAa,iBAIV,mBAAGA,UAAWA,EAAWO,KAAMF,EAAMG,IAArC,SACJH,EAAMI,SCMAC,G,MAA4C,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUf,EAAa,EAAbA,OAEhF,EAA0CgB,IAAMC,UAAS,GAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAwBH,IAAMC,SAAS,KAAvC,mBAAOtB,EAAP,KAAayB,EAAb,KAIA,EAAsBJ,IAAMC,SAAS,KAArC,mBAAOvB,EAAP,KAAY2B,EAAZ,KAKA,EAAsBL,IAAMC,SAAS,KAArC,mBAAOrB,EAAP,KAAY0B,EAAZ,KAIA,EAAkCN,IAAMC,SAAS,KAAjD,mBAAOpB,EAAP,KAAkB0B,EAAlB,KAIA,EAAsCP,IAAMC,SAAS,KAArD,mBAAOnB,EAAP,KAAoB0B,EAApB,KAIMC,EAAgB9B,EAAK+B,QAAU,GAAK9B,EAAI8B,QAAU,GAAK7B,EAAU6B,QAAU,GAAK5B,EAAY4B,QAAU,EACtGC,EAAajC,EAAIgC,QAAU,GA+BjC,OAGI,uBAAMxB,UAAU,eACZ0B,SAjCsD,SAACC,GAC3DA,EAAMC,iBAENX,GAAiB,GAEL,WAARL,GAAoBW,GAAiBE,GACrCI,QAAQC,IAAI,SAEJjB,EAAS,CACLrB,IAAKA,EACLC,KAAMA,EACNC,IAAKA,EACLC,UAAWA,EACXC,YAAaA,KAGX,SAATgB,GAAkBW,EACvBzB,EAAOa,EAAQ,CAAEnB,IAAKA,EAClBC,KAAMA,EACNC,IAAKA,EACLC,UAAWA,EACXC,YAAaA,IAEjBiC,QAAQC,IAAI,YAShB,UAGI,mCAAe,WAATlB,EAAoB,MAAQ,OAAlC,aAAoDD,KAGpD,oDAEI,uBAAOlB,KAAK,OAAOmB,KAAK,OACpBmB,SAhEqD,SAACJ,GAClET,EAAQS,EAAMK,OAAOC,QAgETA,MAAOxC,IACVuB,IAAkBO,GACf,mBAAGvB,UAAU,sBAAb,2BAKR,4CAEI,uBAAOP,KAAK,MAAMmB,KAAK,OACnBmB,SAvEoD,SAACJ,GACjER,EAAOQ,EAAMK,OAAOC,QAuERA,MAAOzC,IACVwB,IAAkBS,GACf,mBAAGzB,UAAU,sBAAb,uDAKR,wCAEI,uBAAOP,KAAK,MAAMmB,KAAK,OACnBmB,SA7EoD,SAACJ,GACjEP,EAAOO,EAAMK,OAAOC,QA6ERA,MAAOvC,IACVsB,IAAkBO,GACf,mBAAGvB,UAAU,sBAAb,0BAIR,8CAEI,uBAAOP,KAAK,YAAYmB,KAAK,OACzBmB,SAnF0D,SAACJ,GACvEN,EAAaM,EAAMK,OAAOC,QAmFdA,MAAOtC,IACVqB,IAAkBO,GACf,mBAAGvB,UAAU,sBAAb,gCAIR,gDAEI,uBAAOP,KAAK,cAAcmB,KAAK,OAC3BmB,SAzF4D,SAACJ,GACzEL,EAAeK,EAAMK,OAAOC,QAyFhBA,MAAOrC,IACVoB,IAAkBO,GACf,mBAAGvB,UAAU,sBAAb,kCAIR,iCAAkB,WAATY,EAAoB,sBAAwB,sBCClDsB,MA3Hf,WACE,MAAgCpB,IAAMC,SAA2B,UAAjE,mBAAQoB,EAAR,KAAiBC,EAAjB,KACA,EAA4BtB,IAAMC,SAAuB,MAAzD,mBAAQJ,EAAR,KAAe0B,EAAf,KAGA,EAAwCvB,IAAMC,SAA4B,CAExE,CACEhB,GAAI,EACJP,IAAI,kGACJC,KAAM,QACNC,IAAK,OACLC,UAAW,OACXC,YAAY,6BARhB,mBAAM0C,EAAN,KAAoBC,EAApB,KAiCIC,EAAkB,SAAC7B,GACxB0B,EAAU1B,GACTyB,EAAY,SA2BRK,EAAc,SAACC,GACrBb,QAAQC,IAAI,UAEZ,IAAMa,EAAoBL,EAAcM,QAAO,SAACC,GAC9C,OAAGA,EAAK9C,KAAM2C,KAMhBH,EAAiBI,IAEf,OACE,gCACG,sBAAK3C,UAAU,WAAf,UACH,qBAAKA,UAAU,WAAWC,IAAI,IAAIC,IAAI,wDACtC,sBAAKF,UAAU,iBAAf,UACE,cAAC,EAAD,CACAM,SAAO,EACLG,KAAK,OACLD,IAAI,gDACN,cAAC,EAAD,CACEC,KAAK,WACLD,IAAI,gDACN,cAAC,EAAD,CACEC,KAAK,SACLD,IAAI,gDACH,cAAC,EAAD,CACDC,KAAK,QACLD,IAAI,mDAER,qBAAKR,UAAU,WAAWC,IAAI,IAAGC,IAAI,mGAEvC,cAAC,EAAD,CACAS,OAASA,EACTC,KAAOuB,EACPtB,SAtFqB,SAACiC,GAKpBjB,QAAQC,IAAI,eAAgBgB,GAE5B,IAAMC,EAAQ,sBACTT,GADS,CAEZ,CACEvC,GAAGiD,KAAKC,SACRzD,IAAKsD,EAAYtD,IACjBC,KAAKqD,EAAYrD,KACjBC,IAAIoD,EAAYpD,IAChBC,UAAUmD,EAAYnD,UACtBC,YAAYkD,EAAYlD,eAI5B2C,EAAiBQ,IAoEnBjD,OA7DiB,SAACa,EAAeuC,GAKnC,IAAMP,EAAoBL,EAAca,QAClCC,EAAYd,EAAee,WAAU,SAACR,GAC1C,OAAGA,EAAK9C,KAAMY,KAKhBgC,EAAkBS,GAAa,CAC7BrD,GAAGuC,EAAcc,GAAWrD,GAC5BP,IAAK8C,EAAcc,GAAW5D,IAC9BC,KAAK6C,EAAcc,GAAW3D,KAC9BC,IAAI4C,EAAcc,GAAW1D,IAC7BC,UAAU2C,EAAcc,GAAWzD,UACnCC,YAAY0C,EAAcc,GAAWxD,aAGvC2C,EAAiBI,MA2CdL,EAAcgB,KAAI,SAACT,GAClB,OAAO,cAAC,EAAD,CACNpD,KAAMoD,EAAKpD,KACXM,GAAM8C,EAAK9C,GACVL,IAAKmD,EAAKnD,IACTC,UAAWkD,EAAKlD,UACfC,YAAaiD,EAAKjD,YAClBJ,IAAMqD,EAAKrD,IACXK,SAAU4C,EACV3C,OAAQ0C,GARUK,EAAK9C,WCnHhBwD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed771e5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CodeFixAction } from \"typescript\";\r\n\r\nimport './Champion.css';\r\n\r\n\r\nexport interface ChampionProps {\r\n    id: number;\r\n    name: string;\r\n    img: string;\r\n    rol: string;\r\n    dificulty:string;\r\n    description:string;\r\n    onDelete: (id:number)=> void; \r\n    onEdit: (id:number)=> void; \r\n\r\n   \r\n}\r\n\r\nexport const Champion: React.FC< ChampionProps> = ({img,name,rol,dificulty,description,onDelete,onEdit,id}) =>{\r\n    const handleDelete: React.MouseEventHandler<HTMLButtonElement>  = () =>{\r\nonDelete(id);\r\n}\r\nconst handleEdit: React.MouseEventHandler<HTMLButtonElement>  = () =>{\r\n    onEdit(id);\r\n    }\r\n    return <div className =\"Champion\">\r\n   <img className =\"Champion__img\" alt=\"champ\" src= {img} ></img>\r\n\r\n        <div className =\"Champion__container\">\r\n            <button onClick={handleDelete}>Delete</button>\r\n            <button onClick={handleEdit}>Edit</button>\r\n\r\n\r\n            <h3 className = \"Champion__h3\">DIFICULTY:{dificulty}</h3>\r\n            <h3 className = \"Champion__h3\">ROL{rol}</h3>\r\n            <h1 className =\"Champion__h1\">{name}</h1>\r\n            <h3 className =\"Champion__h3\">BIOGRAPHY</h3>\r\n            <p className = \"Champion__p\">{description}</p>\r\n\r\n\r\n       \r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport './Link.css';\r\n\r\n\r\ninterface LinkProps {\r\n    text: string;\r\n    url: string;\r\n\r\n    actives?: boolean;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps>  = (props) =>{\r\n   let className = 'Link';\r\n    if (props.actives) {\r\n        className += ' Link--active';\r\n        \r\n    }\r\n    \r\n    return <a className={className} href={props.url}>\r\n      {props.text}\r\n    </a>;\r\n}","\r\nimport React from \"react\";\r\nimport { ChampionProps } from '../Champion/Champion';\r\nimport './ChampionForm.css';\r\n\r\n\r\ninterface ChampionFormProps {\r\n    editId: number | null;\r\n    type: 'create' | 'Edit';\r\n    onCreate: (newChampion: {\r\n        name: string;\r\n        img: string;\r\n        rol: string;\r\n        dificulty: string;\r\n        description: string;\r\n    }) => void;\r\n    onEdit: (id: number, editChampionElem: {\r\n        name: string, img: string;\r\n        rol: string;\r\n        dificulty: string;\r\n        description: string;\r\n    }) => void;\r\n\r\n}\r\n\r\nexport const ChampionForm: React.FC<ChampionFormProps> = ({ editId, type, onCreate, onEdit }) => {\r\n\r\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n\r\n    const [name, setName] = React.useState(' ');\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const [img, setImg] = React.useState(' ');\r\n    const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setImg(event.target.value);\r\n    }\r\n\r\n    const [rol, setRol] = React.useState(' ');\r\n    const handleRolChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setRol(event.target.value);\r\n    }\r\n    const [dificulty, setDificulty] = React.useState(' ');\r\n    const handleDificultyChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setDificulty(event.target.value);\r\n    }\r\n    const [description, setDescription] = React.useState(' ');\r\n    const handleDescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setDescription(event.target.value);\r\n    }\r\n    const iscaractValid = name.length >= 1 || rol.length >= 1 || dificulty.length >= 1 || description.length >= 1;\r\n    const isImgValid = img.length >= 10;\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n        event.preventDefault();\r\n        //tell me if smn is missing\r\n        setFormSubmitted(true);\r\n\r\n        if (type ==='create' && iscaractValid && isImgValid) {\r\n            console.log('valid');\r\n\r\n                    onCreate({\r\n                        img: img,\r\n                        name: name,\r\n                        rol: rol,\r\n                        dificulty: dificulty,\r\n                        description: description\r\n\r\n                    });\r\n        }else if(type === 'Edit'&& iscaractValid){\r\n            onEdit(editId!,{ img: img,\r\n                name: name,\r\n                rol: rol,\r\n                dificulty: dificulty,\r\n                description: description});\r\n        }else{\r\n            console.log('invalid');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n\r\n\r\n        <form className=\"ChampionForm\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <h2> {type === 'create' ? 'New' : 'Edit'}ChampElem {editId}</h2>\r\n\r\n\r\n            <label>\r\n                Champion's Name\r\n                <input name=\"name\" type=\"text\"\r\n                    onChange={handleNameChange}\r\n                    value={name} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a Name</p>\r\n                }\r\n\r\n            </label>\r\n\r\n            <label>\r\n                Img URL\r\n                <input name=\"img\" type=\"text\"\r\n                    onChange={handleImgChange}\r\n                    value={img} />\r\n                {formSubmitted && !isImgValid &&\r\n                    <p className=\"ChampionForm__error\">Url must be at least 10 caracters long</p>\r\n                }\r\n\r\n            </label>\r\n\r\n            <label>\r\n                Rol\r\n                <input name=\"rol\" type=\"text\"\r\n                    onChange={handleRolChange}\r\n                    value={rol} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a rol</p>\r\n                }\r\n\r\n            </label>\r\n            <label>\r\n                Dificulty\r\n                <input name=\"dificulty\" type=\"text\"\r\n                    onChange={handleDificultyChange}\r\n                    value={dificulty} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a dificulty</p>\r\n                }\r\n\r\n            </label>\r\n            <label>\r\n                Description\r\n                <input name=\"description\" type=\"text\"\r\n                    onChange={handleDescriptionChange}\r\n                    value={description} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a description</p>\r\n                }\r\n\r\n            </label>\r\n            <button>{type === 'create' ? 'Create new Champion' : 'Save changes'}</button>\r\n\r\n        </form>\r\n    );\r\n\r\n}","import React from 'react';\n\nimport './App.css';\nimport { Champion} from '../Champion/Champion';\nimport { Link } from '../Link/Link';\nimport { ChampionForm} from '../ChampionForm/ChampionForm';\nimport {ChampionProps} from '../Champion/Champion';\nimport { title } from 'process';\n\n\ntype ChampionElemObj = {\n  id:number;\n  name: string;\n  img: string;\n  rol: string;\n  dificulty:string;\n  description:string;\n\n}\n\n\nfunction App() {\n  const [ formType,setFormType] = React.useState<'create'| 'Edit'>('create');\n  const [ editId,setEditId] = React.useState<number| null>(null);\n\n\n  const[championElems,setChampionElems] = React.useState<ChampionElemObj[]>([\n\n    {\n      id: 0,\n      img:'https://cdnb.artstation.com/p/assets/images/images/036/132/497/large/qi-mang-10m.jpg?1616794088',\n      name: 'leona',\n      rol: 'tank',\n      dificulty: 'Easy',\n      description:'gay solary in gay panic'\n    }\n  ]);\n\n  const handleCreate = (newChampion:{ name: string;\n    img: string;\n    rol: string;\n    dificulty:string;\n    description:string;} ) =>{\n    console.log('new Champion', newChampion);\n\n    const newArray =[\n      ...championElems,\n      {\n        id:Math.random(),\n        img: newChampion.img,\n        name:newChampion.name,\n        rol:newChampion.rol,\n        dificulty:newChampion.dificulty,\n        description:newChampion.description\n\n      }\n    ]\n    setChampionElems(newArray)\n  }\nconst handleBeginEdit = (editId:number) =>{\n setEditId(editId);\n  setFormType('Edit');\n\n}\nconst handleEdit = (editId:number, editChampionElem:{ name: string;\n  img: string;\n  rol: string;\n  dificulty:string;\n  description:string;}) =>{\nconst championElemsCopy = championElems.slice();\nconst editIndex = championElems. findIndex((elem)=>{\n  if(elem.id=== editId){\n    return true;\n  }\n  return false;\n});\nchampionElemsCopy[editIndex] = {\n  id:championElems[editIndex].id,\n  img: championElems[editIndex].img,\n  name:championElems[editIndex].name,\n  rol:championElems[editIndex].rol,\n  dificulty:championElems[editIndex].dificulty,\n  description:championElems[editIndex].description,\n\n}\nsetChampionElems(championElemsCopy);\n \n }\nconst handleDelete= (deleteId: number)=> {\nconsole.log(\"delete\");\n\nconst championElemsCopy = championElems.filter((elem)=>{\n  if(elem.id ===deleteId){\n    return false;\n  }else{\n    return true;\n  }\n});\nsetChampionElems(championElemsCopy);\n}\n  return (\n    <div>\n       <nav className=\"App__nav\">\n    <img className=\"App__img\" alt=\" \" src=\"https://universe.leagueoflegends.com/images/LOL.png\" />\n    <div className=\"App__LinkGroup\">\n      <Link\n      actives\n        text=\"Home\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\" />\n      <Link\n        text=\"Champion\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n      <Link\n        text=\"Region\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n         <Link\n        text=\"Skins\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n    </div>\n    <img className=\"App__img\" alt=\" \"src=\"https://www.pinclipart.com/picdir/big/73-739007_icon-profile-picture-circle-png-clipart.png\" />\n  </nav>\n  <ChampionForm \n  editId= {editId}\n  type= {formType}\n  onCreate={handleCreate} \n  onEdit={handleEdit}> \n  </ChampionForm>\n\n  {championElems.map((elem)=>{\n    return <Champion key={elem.id} \n     name={elem.name}\n     id = {elem.id}\n      rol={elem.rol}\n       dificulty={elem.dificulty}\n        description={elem.description} \n        img= {elem.img}\n        onDelete={handleDelete}\n        onEdit={handleBeginEdit}/> \n  })}\n    </div>\n   \n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}