{"version":3,"sources":["Champion/Champion.tsx","Link/Link.tsx","ChampionForm/ChampionForm.tsx","AbilityForm/AbilityForm.tsx","ChampionDetails/ChampionDetails.tsx","Page404/Page404.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Champion","img","name","rol","dificulty","description","onDelete","onEdit","id","type","history","useHistory","className","alt","src","onClick","push","Link","props","activeClassName","to","url","text","ChampionForm","editId","onCreate","React","useState","formSubmitted","setFormSubmitted","setName","setImg","setRol","setDificulty","setDescription","iscaractValid","length","isImgValid","onSubmit","event","preventDefault","console","log","onChange","target","value","AbilityForm","keyboard","setkeyboard","setdescription","newAbilityElem","Math","random","goBack","ChampionDetails","list","onCreateAbilities","idString","useParams","parseFloat","elem","find","abilities","map","abilityElem","Page404","App","formType","setFormType","setEditId","championElems","setChampionElems","handleBeginEdit","handleDelete","deleteId","championElemsCopy","filter","path","newChampion","arrayCopy","slice","editChampionElem","editIndex","findIndex","champioinElemId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afc15cf1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CodeFixAction } from \"typescript\";\r\n\r\nimport './Champion.css';\r\n\r\n\r\nexport interface ChampionProps {\r\n    id: number;\r\n    name: string;\r\n    img: string;\r\n    rol: string;\r\n    dificulty: string;\r\n    description: string;\r\n    onDelete?: (id: number) => void;\r\n    onEdit?: (id: number) => void;\r\n    type: 'details' | 'Edit';\r\n\r\n\r\n}\r\n\r\nexport const Champion: React.FC<ChampionProps> = ({ img, name, rol, dificulty, description, onDelete, onEdit, id, type }) => {\r\n\r\n    const history = useHistory();\r\n    const handleDelete: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        if (onDelete) {\r\n            onDelete(id);\r\n        }\r\n        ;\r\n    }\r\n    const handleEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        if (onEdit) {\r\n            onEdit(id);\r\n        }\r\n\r\n    }\r\n    const handleView: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        history.push(`/details/${id}`);\r\n    }\r\n    return <div className=\"Champion\">\r\n        <img className=\"Champion__img\" alt=\"champ\" src={img} ></img>\r\n\r\n        <div className=\"Champion__container\">\r\n            {type && <><button onClick={handleView}>view</button> \r\n            {onDelete && <button onClick={handleDelete}>Delete</button>}\r\n            {onEdit && <button onClick={handleEdit}>Edit</button>}\r\n            </>\r\n            }\r\n\r\n\r\n\r\n\r\n            <h3 className=\"Champion__h3\">DIFICULTY:{dificulty}</h3>\r\n            <h3 className=\"Champion__h3\">ROL{rol}</h3>\r\n            <h1 className=\"Champion__h1\">{name}</h1>\r\n            <h3 className=\"Champion__h3\">BIOGRAPHY</h3>\r\n            <p className=\"Champion__p\">{description}</p>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport './Link.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ninterface LinkProps {\r\n    text: string;\r\n    url: string;\r\n\r\n    actives?: boolean;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps>  = (props) =>{\r\n    return <NavLink className= \"Link\" activeClassName =\"Link--active\" to={props.url}>\r\n      {props.text}\r\n    </NavLink>;\r\n}","\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ChampionProps } from '../Champion/Champion';\r\nimport './ChampionForm.css';\r\n\r\n\r\ninterface ChampionFormProps {\r\n    editId: number | null;\r\n    type: 'create' | 'Edit';\r\n    onCreate: (newChampion: {\r\n        name: string;\r\n        img: string;\r\n        rol: string;\r\n        dificulty: string;\r\n        description: string;\r\n    }) => void;\r\n    onEdit: (id: number, editChampionElem: {\r\n        name: string, img: string;\r\n        rol: string;\r\n        dificulty: string;\r\n        description: string;\r\n    }) => void;\r\n\r\n}\r\n\r\nexport const ChampionForm: React.FC<ChampionFormProps> = ({ editId, type, onCreate, onEdit }) => {\r\nconst history = useHistory();\r\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n\r\n    const [name, setName] = React.useState(' ');\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const [img, setImg] = React.useState(' ');\r\n    const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setImg(event.target.value);\r\n    }\r\n\r\n    const [rol, setRol] = React.useState(' ');\r\n    const handleRolChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setRol(event.target.value);\r\n    }\r\n    const [dificulty, setDificulty] = React.useState(' ');\r\n    const handleDificultyChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setDificulty(event.target.value);\r\n    }\r\n    const [description, setDescription] = React.useState(' ');\r\n    const handleDescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setDescription(event.target.value);\r\n    }\r\n    const iscaractValid = name.length >= 1 || rol.length >= 1 || dificulty.length >= 1 || description.length >= 1;\r\n    const isImgValid = img.length >= 10;\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n        event.preventDefault();\r\n        //tell me if smn is missing\r\n        setFormSubmitted(true);\r\n\r\n        if (type ==='create' && iscaractValid && isImgValid) {\r\n            console.log('valid');\r\n\r\n                    onCreate({\r\n                        img: img,\r\n                        name: name,\r\n                        rol: rol,\r\n                        dificulty: dificulty,\r\n                        description: description,\r\n\r\n                    });\r\n                    setName('');\r\n                    setImg('');\r\n                    setDificulty('');\r\n                    setRol('');\r\n                    setDescription('');\r\n                    setFormSubmitted(false);\r\n                    history.push('/champlist');\r\n\r\n\r\n\r\n\r\n        }else if(type === 'Edit'&& iscaractValid){\r\n            onEdit(editId!,{ img: img,\r\n                name: name,\r\n                rol: rol,\r\n                dificulty: dificulty,\r\n                description: description});\r\n        }else{\r\n            console.log('invalid');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n\r\n\r\n        <form className=\"ChampionForm\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <h2> {type === 'create' ? 'New' : 'Edit'}ChampElem {editId}</h2>\r\n\r\n\r\n            <label>\r\n                Champion's Name\r\n                <input name=\"name\" type=\"text\"\r\n                    onChange={handleNameChange}\r\n                    value={name} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a Name</p>\r\n                }\r\n\r\n            </label>\r\n\r\n            <label>\r\n                Img URL\r\n                <input name=\"img\" type=\"text\"\r\n                    onChange={handleImgChange}\r\n                    value={img} />\r\n                {formSubmitted && !isImgValid &&\r\n                    <p className=\"ChampionForm__error\">Url must be at least 10 caracters long</p>\r\n                }\r\n\r\n            </label>\r\n\r\n            <label>\r\n                Rol\r\n                <input name=\"rol\" type=\"text\"\r\n                    onChange={handleRolChange}\r\n                    value={rol} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a rol</p>\r\n                }\r\n\r\n            </label>\r\n            <label>\r\n                Dificulty\r\n                <input name=\"dificulty\" type=\"text\"\r\n                    onChange={handleDificultyChange}\r\n                    value={dificulty} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a dificulty</p>\r\n                }\r\n\r\n            </label>\r\n            <label>\r\n                Description\r\n                <input name=\"description\" type=\"text\"\r\n                    onChange={handleDescriptionChange}\r\n                    value={description} />\r\n                {formSubmitted && !iscaractValid &&\r\n                    <p className=\"ChampionForm__error\">Add a description</p>\r\n                }\r\n\r\n            </label>\r\n            <button>{type === 'create' ? 'Create new Champion' : 'Save changes'}</button>\r\n\r\n        </form>\r\n    );\r\n\r\n}","import * as React from 'react'; \r\nimport { useHistory } from 'react-router-dom';\r\nimport { AbilityElemObj } from '../types/AbilityElemObj';\r\n\r\ninterface AbilityFormProps{\r\n\r\n    onCreate: (newAbilityElem: AbilityElemObj ) => void;\r\n}\r\n\r\nconst AbilityForm: React.FC<AbilityFormProps>= ({ onCreate}) =>{\r\n    const history = useHistory();\r\n    const [name, setName] = React.useState(' ');\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const [keyboard, setkeyboard] = React.useState(' ');\r\n    const handleKeyboardChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setkeyboard(event.target.value);\r\n    }\r\n    const [description, setdescription] = React.useState(' ');\r\n    const handledescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setdescription(event.target.value);\r\n    }\r\n    const [img, setImg] = React.useState(' ');\r\n    const handleimgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setImg(event.target.value);\r\n    }\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n        event.preventDefault();\r\n        const newAbilityElem: AbilityElemObj={\r\n            id: Math.random(),\r\n            name:name,\r\n            keyboard:keyboard,\r\n            description:description,\r\n            img:img\r\n        }\r\n        onCreate(newAbilityElem);\r\n        history.goBack();\r\n    }\r\n\r\n    return(<form onSubmit={handleSubmit}> \r\n        <input \r\n        type =\"text\"\r\n        onChange={handleNameChange}\r\n        value ={name}/>\r\n\r\n         <input \r\n        type =\"text\"\r\n        onChange={handleKeyboardChange}\r\n        value ={keyboard}/>\r\n        \r\n         <input \r\n        type =\"text\"\r\n        onChange={handledescriptionChange}\r\n        value ={description}/>\r\n        \r\n         <input \r\n        type =\"text\"\r\n        onChange={handleimgChange}\r\n        value ={img}/>\r\n\r\n        <button>\r\n            add Ability\r\n        </button>\r\n    </form>)\r\n}\r\nexport default AbilityForm;","import * as React from 'react'; \r\nimport { Redirect, useHistory, useParams } from 'react-router';\r\nimport { Champion } from '../Champion/Champion';\r\nimport AbilityForm from '../AbilityForm/AbilityForm';\r\nimport { ChampionElemObj } from '../types/ChampionElemObj';\r\nimport { AbilityElemObj } from '../types/AbilityElemObj';\r\n\r\ninterface ChampionDetailsProps{\r\nlist: ChampionElemObj[];\r\nonCreateAbilities: (champioinElemId: number, newAbilityElem: AbilityElemObj)=>void;\r\n}\r\n\r\n\r\nconst ChampionDetails: React.FC<ChampionDetailsProps>= ({ list ,onCreateAbilities}) =>{\r\n\r\n    const { id: idString } = useParams<{id:string}>();\r\nconst id = parseFloat(idString);\r\nconst elem = list.find((elem)=>{\r\n/*funciona igual que un if else */ \r\n    return elem.id === id;\r\n})\r\nconsole.log(elem);\r\nif(!elem){\r\n    return<Redirect to=\"/404\"></Redirect>\r\n}\r\n\r\n\r\n\r\nconst {name,img,dificulty,description,rol,abilities} = elem;\r\n\r\nconst handleCreateAbilityElem = (newAbilityElem:AbilityElemObj)=>{\r\n    onCreateAbilities(id,newAbilityElem);\r\n}\r\n    return(<div>\r\n        <Champion\r\n        name ={name}\r\n        img ={img}\r\n        description ={description}\r\n        rol ={rol}\r\n        dificulty ={dificulty}\r\n        id={id}\r\n        type = \"details\"\r\n        >\r\n        </Champion>\r\n        <div>\r\n            <h2>Total abilities: {abilities.length}</h2>\r\n           \r\n            <ol>{abilities.map(abilityElem =>{\r\n                return <li  key = {abilityElem.id} >{abilityElem.name} - {abilityElem.img}</li>\r\n            })} </ol>\r\n            <AbilityForm onCreate={handleCreateAbilityElem}/>\r\n\r\n        </div>\r\n        </div>);\r\n}\r\nexport default ChampionDetails;\r\n","import * as React from 'react'; \r\n\r\ninterface Page404Props{\r\n\r\n}\r\n\r\n\r\nconst Page404: React.FC<Page404Props>= ({ }) =>{\r\nreturn(<div>404 Not found</div>);\r\n}\r\nexport default Page404;","import React from 'react';\n\nimport './App.css';\nimport { Champion } from '../Champion/Champion';\nimport { Link } from '../Link/Link';\nimport { ChampionForm } from '../ChampionForm/ChampionForm';\nimport { ChampionProps } from '../Champion/Champion';\nimport { title } from 'process';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport ChampionDetails from '../ChampionDetails/ChampionDetails';\nimport Page404 from '../Page404/Page404';\nimport { ChampionElemObj } from '../types/ChampionElemObj';\nimport { AbilityElemObj } from '../types/AbilityElemObj';\nimport { SkinElemObj } from '../types/SkinElemObj';\n\n\n\n\n\nfunction App() {\n  const [formType, setFormType] = React.useState<'create' | 'Edit'>('create');\n  const [editId, setEditId] = React.useState<number | null>(null);\n\n\n  const [championElems, setChampionElems] = React.useState<ChampionElemObj[]>([\n\n    {\n      id: 0,\n      img: 'https://cdnb.artstation.com/p/assets/images/images/036/132/497/large/qi-mang-10m.jpg?1616794088',\n      name: 'leona',\n      rol: 'tank',\n      dificulty: 'Easy',\n      description: 'my deardiana....',\n      abilities: [\n        {\n          id: 0,\n          name: 'Solar Punch',\n          img: 'https://static.wikia.nocookie.net/leagueoflegends/images/e/eb/Leona_Shield_of_Daybreak.png/revision/latest/zoom-crop/width/360/height/360?cb=20130929123016',\n          keyboard: 'Q',\n          description: 'for your love immm...',\n        }\n      ],\n     /* skins:[\n        {\n          id:0.1,\n          name: 'Dawnbringer Leona',\n          img: 'https://cdnb.artstation.com/p/assets/images/images/036/132/497/large/qi-mang-10m.jpg?1616794088',\n         theme: 'Eclipse',\n          description: 'In the mirror of the glass...'\n        }\n      ]*/\n    }\n  ]);\n\n  const handleCreate = (newChampion: {\n    name: string;\n    img: string;\n    rol: string;\n    dificulty: string;\n    description: string;\n\n    //skins:[]\n  }) => {\n    console.log('new Champion', newChampion);\n    const arrayCopy = championElems.slice(); // copia del arreglo\n    arrayCopy.push({ //agrega nuevo elemento con la informacion recibida\n        id:Math.random(),\n        img: newChampion.img,\n        name: newChampion.name,\n        rol: newChampion.rol,\n        dificulty: newChampion.dificulty,\n        description: newChampion.description,\n        abilities: [],\n    });\n/*\n    const newArray = [\n      ...championElems,\n      {\n        id: Math.random(),\n        img: newChampion.img,\n        name: newChampion.name,\n        rol: newChampion.rol,\n        dificulty: newChampion.dificulty,\n        description: newChampion.description,\n        abilities: [],\n\n      }\n    ]*/ \n\n    setChampionElems(arrayCopy);\n  }\n  const handleBeginEdit = (editId: number) => {\n    setEditId(editId);\n    setFormType('Edit');\n  }\n\n  const handleEdit = (editId: number, editChampionElem: { //edit champion info\n    name: string;\n    img: string;\n    rol: string;\n    dificulty: string;\n    description: string;\n  }) => {\n    const championElemsCopy = championElems.slice();\n    const editIndex = championElems.findIndex((elem) => {\n      if (elem.id === editId) {\n        return true;\n      }\n      return false;\n    });\n    championElemsCopy[editIndex] = {\n      /*id:championElems[editIndex].id,\n      img: championElems[editIndex].img,\n      name:championElems[editIndex].name,\n      rol:championElems[editIndex].rol,\n      dificulty:championElems[editIndex].dificulty,\n      description:championElems[editIndex].description,\n      */\n      ...championElems[editIndex],\n      ...editChampionElem,\n    }\n    setChampionElems(championElemsCopy);\n\n  }\n\n  const handleDelete = (deleteId: number) => {\n    console.log(\"delete\");\n\n    const championElemsCopy = championElems.filter((elem) => {\n      if (elem.id === deleteId) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setChampionElems(championElemsCopy);\n  }\n\n  const handleCreateAbility = (champioinElemId: number, newAbilityElem: AbilityElemObj) => {\n    const championElemsCopy = championElems.slice();\n    const editIndex = championElems.findIndex((elem) => {\n      if (elem.id === champioinElemId) {\n        return true;\n      }\n      return false;\n    });\n    championElemsCopy[editIndex] = {\n      ...championElems[editIndex],\n      abilities: [\n        ...championElems[editIndex].abilities,\n        newAbilityElem\n      ]\n    }\n    setChampionElems(championElemsCopy);\n\n  }\n\n\n  return (\n    <HashRouter>\n      <div>\n        <nav className=\"App__nav\">\n          <img className=\"App__img\" alt=\" \" src=\"https://universe.leagueoflegends.com/images/LOL.png\" />\n          <div className=\"App__LinkGroup\">\n            <Link\n\n              text=\"Home\"\n              url=\"/form\" />\n            <Link\n              text=\"Champion\"\n              url=\"champlist\"></Link>\n            <Link\n              text=\"Region\"\n              url=\"\"></Link>\n            <Link\n              text=\"Skins\"\n              url=\"\"></Link>\n          </div>\n          <img className=\"App__img\" alt=\" \" src=\"https://www.pinclipart.com/picdir/big/73-739007_icon-profile-picture-circle-png-clipart.png\" />\n        </nav>\n        <Switch>\n          <Route path=\"/form\">\n\n            <ChampionForm\n              editId={editId}\n              type={formType}\n              onCreate={handleCreate}\n              onEdit={handleEdit}>\n            </ChampionForm>\n\n          </Route>\n\n          <Route path=\"/champlist\">\n            {championElems.map((elem) => {\n              return <Champion key={elem.id}\n                name={elem.name}\n                id={elem.id}\n                rol={elem.rol}\n                dificulty={elem.dificulty}\n                description={elem.description}\n                img={elem.img}\n                type=\"Edit\"\n                onDelete={handleDelete}\n                onEdit={handleBeginEdit} />\n            })}\n          </Route>\n          <Route path=\"/details/:id\">\n            <ChampionDetails list={championElems}\n              onCreateAbilities={handleCreateAbility}>\n            </ChampionDetails>\n          </Route>\n          <Route path=\"/404\">\n            <Page404></Page404>\n          </Route>\n          <Redirect to=\"/404\">\n            <Page404></Page404>\n\n          </Redirect>\n        </Switch>\n\n\n\n      </div>\n    </HashRouter>\n\n\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}