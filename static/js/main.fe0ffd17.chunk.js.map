{"version":3,"sources":["Champion/Champion.tsx","Link/Link.tsx","ChampionForm/ChampionForm.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Champion","props","className","alt","src","img","dificulty","name","description","Link","actives","href","url","text","ChampionForm","onCreate","React","useState","formSubmitted","setFormSubmitted","setName","setImg","rol","setRol","setDificulty","setDescription","iscaractValid","length","isImgValid","onSubmit","event","preventDefault","console","log","type","onChange","target","value","App","championElems","setChampionElems","newChampion","newArray","id","Math","random","map","elem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0ffd17.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './Champion.css';\r\n\r\n\r\nexport interface ChampionProps {\r\n    name: string;\r\n    img: string;\r\n    rol: string;\r\n    dificulty:string;\r\n    description:string;\r\n   \r\n}\r\n\r\nexport const Champion: React.FC< ChampionProps>  = (props) =>{\r\n    return <div className =\"Champion\">\r\n   <img className =\"Champion__img\" alt=\"champ\" src= {props.img} ></img>\r\n\r\n\r\n\r\n        <div className =\"Champion__container\">\r\n\r\n            <h3 className = \"Champion__h3\">DIFICULTY:{props.dificulty}</h3>\r\n            <h3 className = \"Champion__h3\">ROL{props.dificulty}</h3>\r\n            <h1 className =\"Champion__h1\">{props.name}</h1>\r\n            <h3 className =\"Champion__h3\">BIOGRAPHY</h3>\r\n            <p className = \"Champion__p\">{props.description}</p>\r\n\r\n\r\n       \r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport './Link.css';\r\n\r\n\r\ninterface LinkProps {\r\n    text: string;\r\n    url: string;\r\n\r\n    actives?: boolean;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps>  = (props) =>{\r\n   let className = 'Link';\r\n    if (props.actives) {\r\n        className += ' Link--active';\r\n        \r\n    }\r\n    \r\n    return <a className={className} href={props.url}>\r\n      {props.text}\r\n    </a>;\r\n}","import React from \"react\";\r\nimport {ChampionProps} from '../Champion/Champion';\r\nimport './ChampionForm.css';\r\n\r\n\r\n\r\n\r\n\r\ninterface ChampionFormProps {\r\n    onCreate:(newChampion:ChampionProps)=> void;\r\n\r\n}\r\n\r\nexport const ChampionForm: React.FC< ChampionFormProps>  = ( {onCreate} ) =>{\r\n\r\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n    \r\n    const [name, setName] = React.useState(' ');\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\r\n        setName(event.target.value);\r\n    }\r\n    const [img, setImg] = React.useState(' ');\r\n    const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\r\n        setImg(event.target.value);\r\n    }\r\n\r\n    const [rol, setRol] = React.useState(' ');\r\n    const handleRolChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\r\n        setRol(event.target.value);\r\n    }\r\n    const [dificulty, setDificulty] = React.useState(' ');\r\n    const handleDificultyChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\r\n        setDificulty(event.target.value);\r\n    }   \r\n    const [description, setDescription] = React.useState(' ');\r\n    const handleDescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\r\n        setDescription(event.target.value);\r\n    }\r\n    const iscaractValid = name.length >= 1 || rol.length>= 1 ||dificulty.length>= 1 ||description.length>= 1 ;\r\n    const isImgValid  = img.length >= 10;\r\n\r\n   const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any)=> {\r\n       event.preventDefault();\r\n       //tell me if smn is missing\r\n       setFormSubmitted(true);\r\n\r\n       if(iscaractValid && isImgValid){\r\n           console.log('valid');\r\n\r\n           onCreate({\r\n               img: img,\r\n               name: name,\r\n               rol: rol,\r\n               dificulty: dificulty,\r\n               description: description\r\n\r\n           })   \r\n\r\n       }else {console.log('invalid');\r\n    }\r\n       \r\n   }\r\n\r\n    return (\r\n\r\n        <form className = \"ChampionForm\"\r\n            onSubmit= {handleSubmit}>\r\n            <h2>Create a Champion</h2>\r\n\r\n            <label>\r\n                Champion's Name\r\n                <input name=\"name\"type =\"text\"\r\n                onChange={handleNameChange}\r\n                value={name}/>\r\n               {formSubmitted && !iscaractValid &&\r\n                 <p className=\"ChampionForm__error\">Add a Name</p>  \r\n               } \r\n\r\n            </label>\r\n\r\n            <label>\r\n                Img URL\r\n                <input name = \"img\" type =\"text\"\r\n                   onChange={handleImgChange}\r\n                   value={img}/>\r\n                   {formSubmitted && !isImgValid &&\r\n                 <p className=\"ChampionForm__error\">Url must be at least 10 caracters long</p>  \r\n               } \r\n\r\n            </label>\r\n\r\n            <label>\r\n                Rol\r\n                <input name=\"rol\"type =\"text\"\r\n                onChange={handleRolChange}\r\n                value={rol}/>\r\n                {formSubmitted && !iscaractValid  &&\r\n                 <p className=\"ChampionForm__error\">Add a rol</p>  \r\n               } \r\n\r\n            </label>\r\n            <label>\r\n               Dificulty\r\n                <input name=\"dificulty\"type =\"text\"\r\n                onChange={handleDificultyChange}\r\n                value={dificulty}/>\r\n                {formSubmitted && !iscaractValid &&\r\n                 <p className=\"ChampionForm__error\">Add a dificulty</p>  \r\n               } \r\n\r\n            </label>\r\n            <label>\r\n                Description\r\n                <input name=\"description\"type =\"text\"\r\n                onChange={handleDescriptionChange}\r\n                value={description}/>\r\n                {formSubmitted && !iscaractValid  &&\r\n                 <p className=\"ChampionForm__error\">Add a description</p>  \r\n               } \r\n\r\n            </label>\r\n            <button>Create</button>\r\n          \r\n        </form>\r\n    );\r\n  \r\n}","import React from 'react';\n\nimport './App.css';\nimport { Champion} from '../Champion/Champion';\nimport { Link } from '../Link/Link';\nimport { ChampionForm} from '../ChampionForm/ChampionForm';\nimport {ChampionProps} from '../Champion/Champion';\n\n\ntype ChampionElemObj = ChampionProps & {\n  id:number;\n}\n\n\nfunction App() {\n\n  const[championElems,setChampionElems] = React.useState<ChampionElemObj[]>([]);\n\n  const handleCreate = (newChampion:ChampionProps ) =>{\n    console.log('new Champion', newChampion);\n\n    const newArray =[\n      ...championElems,\n      {\n        id:Math.random(),\n        img: newChampion.img,\n        name:newChampion.name,\n        rol:newChampion.rol,\n        dificulty:newChampion.dificulty,\n        description:newChampion.description\n\n      }\n    ]\n    setChampionElems(newArray)\n  }\n\n\n  return (\n    <div>\n       <nav className=\"App__nav\">\n    <img className=\"App__img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Youtube_Music_icon.svg/2048px-Youtube_Music_icon.svg.png\" />\n    <div className=\"App__LinkGroup\">\n      <Link\n      actives\n        text=\"Home\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\" />\n      <Link\n        text=\"Champion\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n      <Link\n        text=\"Region\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n         <Link\n        text=\"Skins\"\n        url=\"https://www.youtube.com/watch?v=fmOEKOjyDxU\"></Link>\n    </div>\n    <img className=\"App__img\" src=\"https://www.pinclipart.com/picdir/big/73-739007_icon-profile-picture-circle-png-clipart.png\" />\n  </nav>\n  <ChampionForm onCreate={handleCreate}> </ChampionForm>\n\n  {championElems.map((elem)=>{\n    return <Champion key={elem.id} name={elem.name} rol={elem.rol} dificulty={elem.dificulty} description={elem.description} img= {elem.img}/> \n  })}\n    </div>\n   \n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}